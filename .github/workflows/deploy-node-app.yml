name: Release, Build, and Deploy Node App

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      issues: write

    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}

    steps:
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: node
          token: ${{ secrets.GH_PAT }}

  docker:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set version from release-please
        run: echo "VERSION=${{ needs.release.outputs.tag_name }}" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/node-app:$VERSION \
                       -t ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest -f ./Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/node-app:$VERSION
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Deploy using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MY_NODE_APP_HOST }}
          username: ${{ secrets.MY_NODE_APP_USER }}
          key: ${{ secrets.MY_NODE_APP_KEY }}
          port: ${{ secrets.MY_NODE_APP_PORT }}
          script: |
            set -e
            echo "Pulling latest Docker image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest

            echo "Stopping old container (if running)..."
            docker rm -f my-node-app || true

            echo "Starting new container..."
            docker run -d --name my-node-app -p 3000:3000 ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest

            echo "Deployment successful."
